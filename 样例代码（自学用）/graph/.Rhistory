)
hour.color <- function(hour) {
return((hour - hour.min) / (hour.max - hour.min) * 128 + 127)
}
size.color <- function(size) {
return((size.max - size) / (size.max - size.min) * 128 + 127)
}
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(1000, 1167),
# ylim = c(30, 100),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(0, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
size.color <- function(size) {
return(255 -(size.max - size) / (size.max - size.min) * 128)
}
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(1000, 1167),
# ylim = c(30, 100),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(0, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(1000, 1167),
# ylim = c(30, 100),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(16, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(1000, 1167),
# ylim = c(30, 100),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(128, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(1000, 1167),
# ylim = c(30, 100),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
save.image("./graph.Rdata")
plot(x = files$X,
y = files$size / 1048576,
xlim = c(4000, 4167),
# ylim = c(30, 100),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(0, 167),
# ylim = c(30, 100),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(48, 71),
# ylim = c(30, 100),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(48, 71),
ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(0, 167),
ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, hour.color(files$hour), size.color(files$size), 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(0, 167),
ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 128, 128, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(0, 167),
ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 255, 128, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(0, 167),
ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 128, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(0, 167),
ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 0, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(0, 167),
ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 128, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(0, 167),
ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
# ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
files <- read.csv("./record2012.csv")
hour.max <- max(files$X)
hour.min <- min(files$X)
size.max <- max(files$size)
size.min <- min(files$size)
hour.color <- function(hour) {
return((hour - hour.min) / (hour.max - hour.min) * 128 + 127)
}
size.color <- function(size) {
return(255 -(size.max - size) / (size.max - size.min) * 128)
}
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
# ylim = c(0, 4),
main = "Size of files in 2013",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
# ylim = c(0, 4),
main = "Size of files in 2012",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
# ylim = c(0, 4),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
files <- read.csv("./record2011.csv")
hour.max <- max(files$X)
hour.min <- min(files$X)
size.max <- max(files$size)
size.min <- min(files$size)
hour.color <- function(hour) {
return((hour - hour.min) / (hour.max - hour.min) * 128 + 127)
}
size.color <- function(size) {
return(255 -(size.max - size) / (size.max - size.min) * 128)
}
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
# ylim = c(0, 4),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
ylim = c(0, 2),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
ylim = c(0, 1.5),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
files <- read.csv("./record2014.csv")
hour.max <- max(files$X)
hour.min <- min(files$X)
size.max <- max(files$size)
size.min <- min(files$size)
hour.color <- function(hour) {
return((hour - hour.min) / (hour.max - hour.min) * 128 + 127)
}
size.color <- function(size) {
return(255 -(size.max - size) / (size.max - size.min) * 128)
}
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
ylim = c(0, 1.5),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(0, 167),
# ylim = c(0, 1.5),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(4000, 6000),
# ylim = c(0, 1.5),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(4500, 5500),
# ylim = c(0, 1.5),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(4750, 5250),
# ylim = c(0, 1.5),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
xlim = c(4900, 5100),
# ylim = c(0, 1.5),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
plot(x = files$X,
y = files$size / 1048576,
# xlim = c(4900, 5100),
# ylim = c(0, 1.5),
main = "Size of files in 2011",
# sub = "sub title",
xlab = "hour",
ylab = "size(MB)",
# ann = TRUE,
# axes = T,
pch = 20,
col = rgb(64, 200, 160, 255, maxColorValue = 255),
)
source("C:/Users/CHEMISTRYMASTER/Desktop/RProjects/graph/graph.Rmd")
source("C:/Users/CHEMISTRYMASTER/Desktop/RProjects/graph/graph.Rmd")
setwd("C:/Users/CHEMISTRYMASTER/Desktop/RProjects/graph")
rm(list = ls())
res <- read.csv("./faithful.csv")
courses <- read.csv("./courses.csv")
wait.max <- max(res$waiting)
wait.min <- min(res$waiting)
erupt.max <- max(res$eruptions)
erupt.min <- min(res$eruptions)
wait.color <- function(waiting) {
return((waiting - wait.min) / (wait.max - wait.min) * 255)
}
erupt.color <- function(eruption) {
return((erupt.max - eruption) / (erupt.max - erupt.min) * 255)
}
plot(x = res$eruptions,
y = res$waiting,
xlim = c(0, 5),
ylim = c(30, 100),
main = "main title",
# sub = "sub title",
xlab = "eruptions",
ylab = "waiting",
# ann = TRUE,
# axes = T,
pch = 19,
col = rgb(wait.color(res$waiting), erupt.color(res$eruptions), 128, 255, maxColorValue = 255),
)
# hist(courses$grade)
print(summary.data.frame(res))
save.image("./graph.Rdata")
setwd("C:/Users/CHEMISTRYMASTER/Desktop/RProjects/graph")
rm(list = ls())
res <- read.csv("./faithful.csv")
courses <- read.csv("./courses.csv")
wait.max <- max(res$waiting)
wait.min <- min(res$waiting)
erupt.max <- max(res$eruptions)
erupt.min <- min(res$eruptions)
wait.color <- function(waiting) {
return((waiting - wait.min) / (wait.max - wait.min) * 255)
}
erupt.color <- function(eruption) {
return((erupt.max - eruption) / (erupt.max - erupt.min) * 255)
}
plot(x = res$eruptions,
y = res$waiting,
xlim = c(0, 5),
ylim = c(30, 100),
main = "main title",
# sub = "sub title",
xlab = "eruptions",
ylab = "waiting",
# ann = TRUE,
# axes = T,
pch = 19,
col = rgb(wait.color(res$waiting), erupt.color(res$eruptions), 128, 255, maxColorValue = 255),
)
# hist(courses$grade)
print(summary.data.frame(res))
save.image("./graph.Rdata")
rm(list = ls())
canvas <- ggplot(data = mpg,
mapping = aes(x = cty,
y = hwy))
rm(list = ls())
my.fun <- function(xvar) {
1 / (1 + exp(-xvar + 10))
}
curve(my.fun(x), from = 0, to = 20)
curve(1 - my.fun(x), add = TRUE, col = "red")  # add表示叠加到同一幅图上
rm(list = ls())
my.fun <- function(xvar) {
1 / (1 + exp(-xvar + 10))
}
curve(my.fun(x), from = 0, to = 20)
curve(1 - my.fun(x), add = TRUE, col = "red")  # add表示叠加到同一幅图上
